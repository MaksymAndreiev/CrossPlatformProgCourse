package client;

import interfaces.Result;
import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.*;
import java.net.Socket;


public class ClientFrame {
    JFrame frame = new JFrame("TCP Client");
    private String host;
    private int port;
    private int num;
    private JPanel panel1;
    private JTextArea textArea;
    private JButton exit;
    private JButton clear;
    private JButton calc;
    private JLabel label;
    private JTextField textField1;
    private JTextField textField2;
    private JTextField textField3;

    public ClientFrame() {
        calc.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    host = textField1.getText();
                    port = Integer.parseInt(textField2.getText());
                    num = Integer.parseInt(textField3.getText());
                    Socket client = new Socket(host, port);
                    showText("Connected to server\n");
                    ObjectOutputStream out = new ObjectOutputStream(client.getOutputStream());
                    String classFile = "out/production/task-8-9[2]/client/JobOne.class";
                    out.writeObject(classFile);
                    FileInputStream fis = new FileInputStream(classFile);
                    byte[] b = new byte[fis.available()];
                    fis.read(b);
                    out.writeObject(b);
                    JobOne aJob = new JobOne(num);
                    out.writeObject(aJob);
                    showText("Submitted a job for execution\n");
                    ObjectInputStream in = new ObjectInputStream(client.getInputStream());
                    classFile = (String) in.readObject();
                    b = (byte[]) in.readObject();
                    FileOutputStream fos = new FileOutputStream(classFile);
                    fos.write(b);
                    Result r = (Result) in.readObject();
                    showText("result = " + r.output() + ", time taken = " + r.scoreTime() + "ns");
                } catch (IOException | ClassNotFoundException exception) {
                    exception.printStackTrace();
                }
            }
        });
        clear.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                textArea.setText("");
            }
        });
        exit.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                frame.dispose();
            }
        });
        frame.getContentPane().add(panel1);
        frame.pack();
        frame.setLocationRelativeTo(null);
        frame.setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        frame.setVisible(true);
    }

    private void showText(String s) {
        this.textArea.append(s);
    }

    public static void main(String[] args) {
        new ClientFrame();
    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        panel1 = new JPanel();
        panel1.setLayout(new BorderLayout(0, 0));
        panel1.setMinimumSize(new Dimension(600, 400));
        panel1.setPreferredSize(new Dimension(600, 400));
        final JPanel panel2 = new JPanel();
        panel2.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(panel2, BorderLayout.NORTH);
        label = new JLabel();
        label.setText("IP Address:");
        panel2.add(label);
        textField1 = new JTextField();
        textField1.setColumns(7);
        panel2.add(textField1);
        final JLabel label1 = new JLabel();
        label1.setText("Port: ");
        panel2.add(label1);
        textField2 = new JTextField();
        textField2.setColumns(7);
        panel2.add(textField2);
        final JLabel label2 = new JLabel();
        label2.setText("N:");
        panel2.add(label2);
        textField3 = new JTextField();
        textField3.setColumns(5);
        panel2.add(textField3);
        final JPanel panel3 = new JPanel();
        panel3.setLayout(new FlowLayout(FlowLayout.CENTER, 5, 5));
        panel1.add(panel3, BorderLayout.SOUTH);
        calc = new JButton();
        calc.setText("Calculate");
        panel3.add(calc);
        clear = new JButton();
        clear.setText("Clear Result");
        panel3.add(clear);
        exit = new JButton();
        exit.setText("Exit Program");
        panel3.add(exit);
        textArea = new JTextArea();
        panel1.add(textArea, BorderLayout.CENTER);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return panel1;
    }
}
